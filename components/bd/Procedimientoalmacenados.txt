--------------Procedimientos almacenados para tabla notas -----------------------------------------------
//Procedimiento para agregar una nota nueva, se debe enviar (usuarioId, Titulo, Contenido)
CALL AgregarNota(1, 'Nueva Nota', 'Contenido de la nueva nota');

//Procedimiento para eliminar una nota, se debe enviar (notaId)
CALL EliminarNota(1);

//Procedimiento para editar una nota, se debe enviar (notaId, Titulo, Contenido)
CALL EditarNota(1, 'Nota Editada', 'Nuevo contenido de la nota editada');




--------------Procedimientos almacenados para tabla recordatorios -----------------------------------------------
//Procedimiento para agregar un recordatorio nuevo, se debe enviar (usuarioId, notaId, feca de recordatorio)
CALL AgregarRecordatorio(1, 1, '2024-03-15 12:00:00');

//Procedimiento para editar un recordatorio, se debe enviar (recordatorioId, fecha de recordatorio)
CALL EditarRecordatorio(1, '2024-03-20 15:00:00');

//Procedimiento para eliminar un recordatorio, se debe enviar (recordatorioId)
CALL EliminarRecordatorio(1);




--------------Procedimientos almacenados para tabla usuarios -----------------------------------------------
//Procedimiento para crear un usuario, se debe enviar (nombreUsuario,Correo,contrase単a)
CALL CrearUsuario('Nuevo Usuario', 'nuevo@ejemplo.com', 'nueva_contrase単a');




--------------Procedimientos almacenados para las vistas -----------------------------------------------
//Procdeimiento para ver las notas segun el usuario loggeado, se debe enviar (usuarioId)
CALL ObtenerNotasPorUsuario(1);

//Procedimienot para ver los recordatorios segun una fecha especifica, se debe enviar (usuarioId, fecha especifica)
CALL ObtenerRecordatoriosPorFecha(1, '2024-03-15');

//Procedimiento para ver los recordatorios segun usuario, se debe enviar (usuarioId)
CALL ObtenerRecordatoriosPorUsuario(1);




--------------Procedimientos almacenados extras -----------------------------------------------

//Procedimiento almacenado para verificar si el usuario que esta queriendo ingresar este en la base de datos
// Se debe enviar (correo, contrase単a) y devuelve un resultado booleano almacenado en la variable (@resultado)
CALL VerificarCredenciales('nuevo@ejemplo.com', 'nueva_contrase単a', @resultado);